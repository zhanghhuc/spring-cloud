<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zssq.dao.mapper.NewsInfoCommentMapper">
    <resultMap id="BaseResultMap" type="com.zssq.news.dao.pojo.NewsInfoComment">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="comment_code" jdbcType="VARCHAR" property="commentCode"/>
        <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
        <result column="org_level" jdbcType="TINYINT" property="orgLevel"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="news_code" jdbcType="VARCHAR" property="newsCode"/>
        <result column="user_code" jdbcType="VARCHAR" property="userCode"/>
        <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="is_shield" jdbcType="TINYINT" property="isShield"/>
        <result column="comment_reply_num" jdbcType="INTEGER" property="commentReplyNum"/>
        <result column="comment_like_num" jdbcType="INTEGER" property="commentLikeNum"/>
        <result column="comment_report_num" jdbcType="INTEGER" property="commentReportNum"/>
    </resultMap>
    <!-- 自定义newsCommentModelMap -->
    <resultMap id="newsCommentModelMap" type="com.zssq.news.model.NewsCommentModel">
        <result column="comment_code" jdbcType="VARCHAR" property="commentCode"/>
        <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="news_code" jdbcType="VARCHAR" property="newsCode"/>
        <result column="user_code" jdbcType="VARCHAR" property="userCode"/>
        <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="is_shield" jdbcType="INTEGER" property="isShield"/>
        <result column="isPraise" jdbcType="INTEGER" property="isPraise"/>
        <result column="comment_reply_num" jdbcType="INTEGER" property="commentReplyNum"/>
        <result column="comment_like_num" jdbcType="INTEGER" property="commentLikeNum"/>
        <result column="comment_report_num" jdbcType="INTEGER" property="commentReportNum"/>
        <!-- 评论回复列表 -->
        <collection property="newsReplyList" javaType="java.util.List" ofType="com.zssq.news.dao.pojo.NewsReply"
                    select="selectReplyList" column="comment_code]">
            <result column="reply_code" property="replyCode" jdbcType="VARCHAR" />
            <result column="user_code" property="userCode" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime" jdbcType="BIGINT" />
            <result column="reply_content" property="replyContent" jdbcType="LONGVARCHAR" />
            <result column="reply_like_num" property="replyLikeNum" jdbcType="INTEGER" />
            <result column="reply_report_num" property="replyReportNum" jdbcType="INTEGER" />
        </collection>
    </resultMap>


    <sql id="Base_Column_List">
    id, comment_code, tenant_code, org_code, org_level, create_time, modify_time, remark, 
    news_code, user_code, comment_content, is_delete, is_shield, comment_reply_num, comment_like_num, 
    comment_report_num
  </sql>

    <sql id="newscomment-where-condition">
        <where>
            <if test="newsCode != null">
                AND news_code = #{newsCode}
            </if>
            <if test="isDelete != null">
                AND is_delete = #{isDelete}
            </if>
            <if test="isShield != null">
                AND is_shield = #{isShield}
            </if>
            <if test="id != null">
                AND id &gt; #{id}
            </if>

        </where>
    </sql>

    <!-- 自定义查询我是否点赞 -->
    <sql id="queryIsPraise">
         IF(
        EXISTS(
        SELECT praise_people_code
        from
        news_comment_praise
        WHERE
        praise_people_code = #{userCode}
        AND
        comment_code = t.comment_code
        ),1,0)
    </sql>


    <select id="selectByCommentCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from news_info_comment
        where comment_code = #{commentCode,jdbcType=VARCHAR}
    </select>
    <select id="selectCount" parameterType="com.zssq.news.model.NewsCommentQuery" resultType="java.lang.Integer" >
        select
        COUNT(1)
        from news_info_comment
        <if test="_parameter != null">
            <include refid="newscomment-where-condition"/>
        </if>
    </select>

    <select id="selectList" parameterType="com.zssq.news.model.NewsCommentQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from news_info_comment
        <if test="_parameter != null">
            <include refid="newscomment-where-condition"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test=" limitStart&gt;=0">
            limit #{limitStart} , #{pageSize}
        </if>
    </select>

    <select id="selectComments" parameterType="com.zssq.news.model.NewsCommentQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>,
        <include refid="queryIsPraise"/>    AS isPraise
        from news_info_comment t
        <if test="_parameter != null">
            <include refid="newscomment-where-condition"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test=" limitStart&gt;=0">
            limit #{limitStart} , #{pageSize}
        </if>
    </select>


    <select id="selectCommentsAndReply" parameterType="com.zssq.news.model.NewsCommentQuery" resultMap="newsCommentModelMap">
        select
        <include refid="Base_Column_List"/>,
        <include refid="queryIsPraise"/>    AS isPraise
        from news_info_comment t
        <if test="_parameter != null">
            <include refid="newscomment-where-condition"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from news_info_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <delete id="deleteNewsComment" parameterType="com.zssq.news.model.NewsCommentModel">
    delete from news_info_comment
    where comment_code = #{commentCode} AND user_code =#{userCode}
  </delete>


    <insert id="insert" parameterType="com.zssq.news.dao.pojo.NewsInfoComment">
    insert into news_info_comment (id, comment_code, tenant_code, 
      org_code, org_level, create_time, 
      modify_time, remark, news_code, 
      user_code, comment_content, is_delete, 
      is_shield, comment_reply_num, comment_like_num, 
      comment_report_num)
    values (#{id,jdbcType=BIGINT}, #{commentCode,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR}, 
      #{orgCode,jdbcType=VARCHAR}, #{orgLevel,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{newsCode,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}, 
      #{isShield,jdbcType=TINYINT}, #{commentReplyNum,jdbcType=INTEGER}, #{commentLikeNum,jdbcType=INTEGER}, 
      #{commentReportNum,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zssq.news.dao.pojo.NewsInfoComment">
        insert into news_info_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="commentCode != null">
                comment_code,
            </if>
            <if test="tenantCode != null">
                tenant_code,
            </if>
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="orgLevel != null">
                org_level,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="newsCode != null">
                news_code,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="commentContent != null">
                comment_content,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="isShield != null">
                is_shield,
            </if>
            <if test="commentReplyNum != null">
                comment_reply_num,
            </if>
            <if test="commentLikeNum != null">
                comment_like_num,
            </if>
            <if test="commentReportNum != null">
                comment_report_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="commentCode != null">
                #{commentCode,jdbcType=VARCHAR},
            </if>
            <if test="tenantCode != null">
                #{tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgLevel != null">
                #{orgLevel,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="newsCode != null">
                #{newsCode,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="commentContent != null">
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="isShield != null">
                #{isShield,jdbcType=TINYINT},
            </if>
            <if test="commentReplyNum != null">
                #{commentReplyNum,jdbcType=INTEGER},
            </if>
            <if test="commentLikeNum != null">
                #{commentLikeNum,jdbcType=INTEGER},
            </if>
            <if test="commentReportNum != null">
                #{commentReportNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="modifyNewsCommentShield" parameterType="com.zssq.news.model.NewsCommentModel">
        update news_info_comment
        <set>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="isShield != null">
                is_shield = #{isShield,jdbcType=TINYINT},
            </if>
        </set>
        where comment_code = #{commentCode,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.zssq.news.dao.pojo.NewsInfoComment">
        update news_info_comment
        <set>
            <if test="commentCode != null">
                comment_code = #{commentCode,jdbcType=VARCHAR},
            </if>
            <if test="tenantCode != null">
                tenant_code = #{tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgLevel != null">
                org_level = #{orgLevel,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="newsCode != null">
                news_code = #{newsCode,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="isShield != null">
                is_shield = #{isShield,jdbcType=TINYINT},
            </if>
            <if test="commentReplyNum != null">
                comment_reply_num = #{commentReplyNum,jdbcType=INTEGER},
            </if>
            <if test="commentLikeNum != null">
                comment_like_num = #{commentLikeNum,jdbcType=INTEGER},
            </if>
            <if test="commentReportNum != null">
                comment_report_num = #{commentReportNum,jdbcType=INTEGER},
            </if>
        </set>
        where comment_code = #{commentCode,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zssq.news.dao.pojo.NewsInfoComment">
    update news_info_comment
    set
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_level = #{orgLevel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      news_code = #{newsCode,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      is_shield = #{isShield,jdbcType=TINYINT},
      comment_reply_num = #{commentReplyNum,jdbcType=INTEGER},
      comment_like_num = #{commentLikeNum,jdbcType=INTEGER},
      comment_report_num = #{commentReportNum,jdbcType=INTEGER}
    where  comment_code = #{commentCode,jdbcType=VARCHAR}
  </update>

</mapper>