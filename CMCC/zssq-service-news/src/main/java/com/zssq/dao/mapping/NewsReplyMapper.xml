<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zssq.dao.mapper.NewsReplyMapper" >
  <resultMap id="BaseResultMap" type="com.zssq.news.dao.pojo.NewsReply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="reply_code" property="replyCode" jdbcType="VARCHAR" />
    <result column="tenant_code" property="tenantCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="news_code" property="newsCode" jdbcType="VARCHAR" />
    <result column="comment_code" property="commentCode" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="org_level" property="orgLevel" jdbcType="TINYINT" />
    <result column="to_reply_user_code" property="toReplyUserCode" jdbcType="VARCHAR" />
    <result column="to_reply_org_code" property="toReplyOrgCode" jdbcType="VARCHAR" />
    <result column="to_reply_org_level" property="toReplyOrgLevel" jdbcType="TINYINT" />
    <result column="reply_content" property="replyContent" jdbcType="VARCHAR" />
    <result column="reply_is_delete" property="replyIsDelete" jdbcType="TINYINT" />
    <result column="reply_is_shield" property="replyIsShield" jdbcType="TINYINT" />
    <result column="reply_like_num" property="replyLikeNum" jdbcType="INTEGER" />
    <result column="reply_report_num" property="replyReportNum" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="BaseCommentReply" type="com.zssq.news.dao.pojo.NewsReply" >
    <result column="reply_code" property="replyCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="news_code" property="newsCode" jdbcType="VARCHAR" />
    <result column="comment_code" property="commentCode" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="reply_content" property="replyContent" jdbcType="VARCHAR" />
    <result column="reply_is_delete" property="replyIsDelete" jdbcType="TINYINT" />
    <result column="reply_is_shield" property="replyIsShield" jdbcType="TINYINT" />
    <result column="isPraise" property="isPraise" jdbcType="TINYINT" />
    <result column="reply_like_num" property="replyLikeNum" jdbcType="INTEGER" />
    <result column="reply_report_num" property="replyReportNum" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, reply_code, tenant_code, create_time, modify_time, remark, news_code, comment_code,
    user_code, org_code, org_level, to_reply_user_code, to_reply_org_code, to_reply_org_level,
    reply_content, reply_is_delete, reply_is_shield, reply_like_num, reply_report_num
  </sql>

  <!-- 自定义查询我是否点赞 -->
  <sql id="queryIsPraise">
    IF(
    EXISTS(
    SELECT  praise_people_code
    from
    news_reply_praise
    WHERE
    praise_people_code = #{userCode}
    AND
     reply_code = t.reply_code
    ),1,0)
  </sql>

  <sql id="Base_Comment_Column_List" >
    reply_code, create_time, news_code, comment_code,user_code,
    reply_content, reply_is_delete, reply_is_shield, reply_like_num, reply_report_num
  </sql>

  <sql id="newsreply-where-condition">
    <where>
      <if test="newsCode != null">
        AND news_code = #{newsCode}
      </if>
      <if test="newsCommentCode != null">
        AND comment_code = #{newsCommentCode}
      </if>
      <if test="id != null">
        AND id &gt; #{id}
      </if>
      <if test="excludeReplyCode != null  and excludeReplyCode!=''  ">
        AND reply_code &lt;&gt; #{excludeReplyCode}
      </if>
    </where>
  </sql>

  <select id="selectCount" parameterType="com.zssq.news.model.NewsReplyQuery" resultType="java.lang.Integer">
    select
    COUNT (1)
    from news_reply
    <if test="_parameter != null">
      <include refid="newsreply-where-condition"/>
    </if>
  </select>

  <select id="selectList" parameterType="com.zssq.news.model.NewsReplyQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from news_reply
    <if test="_parameter != null">
      <include refid="newsreply-where-condition"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test=" limitStart&gt;=0">
      limit #{limitStart} , #{pageSize}
    </if>
  </select>

  <select id="selectByReplyCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from news_reply
    WHERE reply_code =#{newsReplyCode}
  </select>

  <select id="selectReplyList" parameterType="com.zssq.news.model.NewsReplyQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>,
    <include refid="queryIsPraise"/>    AS isPraise
    from news_reply t
    WHERE  comment_code =#{newsCommentCode}
    AND reply_is_delete = #{replyIsDelete} AND  reply_is_shield = #{replyIsShield}
    <if test="id != null and id > 0">
      AND id <![CDATA[<]]>#{id}
    </if>
    order by id DESC
    <if test="pageSize != null">
      limit #{limitStart} , #{pageSize}
    </if>
  </select>

  <select id="selectCommentReplyList" parameterType="com.zssq.news.model.NewsReplyQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from news_reply t
    WHERE  comment_code =#{newsCommentCode}
    AND reply_is_delete = 0 AND  reply_is_shield = 0
    order by create_time DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from news_reply
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </delete>

  <update id="deleteNewsReply" parameterType="com.zssq.news.model.NewsReplyModel">
    update news_reply set
        modify_time = #{modifyTime,jdbcType=BIGINT},
        reply_is_delete = 1
    where reply_code = #{replyCode,jdbcType=VARCHAR}
    AND  user_code=#{userCode}
  </update>

  <insert id="insert" parameterType="com.zssq.news.dao.pojo.NewsReply" >
    insert into news_reply (id, reply_code, tenant_code,
    create_time, modify_time, remark,
    news_code, comment_code, user_code,
    org_code, org_level, to_reply_user_code,
    to_reply_org_code, to_reply_org_level, reply_content,
    reply_is_delete, reply_is_shield, reply_like_num,
    reply_report_num)
    values (#{id,jdbcType=BIGINT}, #{replyCode,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR},
    #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR},
    #{newsCode,jdbcType=VARCHAR}, #{commentCode,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR},
    #{orgCode,jdbcType=VARCHAR}, #{orgLevel,jdbcType=TINYINT}, #{toReplyUserCode,jdbcType=VARCHAR},
    #{toReplyOrgCode,jdbcType=VARCHAR}, #{toReplyOrgLevel,jdbcType=TINYINT}, #{replyContent,jdbcType=VARCHAR},
    #{replyIsDelete,jdbcType=TINYINT}, #{replyIsShield,jdbcType=TINYINT}, #{replyLikeNum,jdbcType=INTEGER},
    #{replyReportNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zssq.news.dao.pojo.NewsReply" >
    insert into news_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="replyCode != null" >
        reply_code,
      </if>
      <if test="tenantCode != null" >
        tenant_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="newsCode != null" >
        news_code,
      </if>
      <if test="commentCode != null" >
        comment_code,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="orgCode != null" >
        org_code,
      </if>
      <if test="orgLevel != null" >
        org_level,
      </if>
      <if test="toReplyUserCode != null" >
        to_reply_user_code,
      </if>
      <if test="toReplyOrgCode != null" >
        to_reply_org_code,
      </if>
      <if test="toReplyOrgLevel != null" >
        to_reply_org_level,
      </if>
      <if test="replyContent != null" >
        reply_content,
      </if>
      <if test="replyIsDelete != null" >
        reply_is_delete,
      </if>
      <if test="replyIsShield != null" >
        reply_is_shield,
      </if>
      <if test="replyLikeNum != null" >
        reply_like_num,
      </if>
      <if test="replyReportNum != null" >
        reply_report_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="replyCode != null" >
        #{replyCode,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null" >
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="newsCode != null" >
        #{newsCode,jdbcType=VARCHAR},
      </if>
      <if test="commentCode != null" >
        #{commentCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="toReplyUserCode != null" >
        #{toReplyUserCode,jdbcType=VARCHAR},
      </if>
      <if test="toReplyOrgCode != null" >
        #{toReplyOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="toReplyOrgLevel != null" >
        #{toReplyOrgLevel,jdbcType=TINYINT},
      </if>
      <if test="replyContent != null" >
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyIsDelete != null" >
        #{replyIsDelete,jdbcType=TINYINT},
      </if>
      <if test="replyIsShield != null" >
        #{replyIsShield,jdbcType=TINYINT},
      </if>
      <if test="replyLikeNum != null" >
        #{replyLikeNum,jdbcType=INTEGER},
      </if>
      <if test="replyReportNum != null" >
        #{replyReportNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zssq.news.dao.pojo.NewsReply" >
    update news_reply
    <set >
      <if test="tenantCode != null" >
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="newsCode != null" >
        news_code = #{newsCode,jdbcType=VARCHAR},
      </if>
      <if test="commentCode != null" >
        comment_code = #{commentCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        org_level = #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="toReplyUserCode != null" >
        to_reply_user_code = #{toReplyUserCode,jdbcType=VARCHAR},
      </if>
      <if test="toReplyOrgCode != null" >
        to_reply_org_code = #{toReplyOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="toReplyOrgLevel != null" >
        to_reply_org_level = #{toReplyOrgLevel,jdbcType=TINYINT},
      </if>
      <if test="replyContent != null" >
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyIsDelete != null" >
        reply_is_delete = #{replyIsDelete,jdbcType=TINYINT},
      </if>
      <if test="replyIsShield != null" >
        reply_is_shield = #{replyIsShield,jdbcType=TINYINT},
      </if>
      <if test="replyLikeNum != null" >
        reply_like_num = #{replyLikeNum,jdbcType=INTEGER},
      </if>
      <if test="replyReportNum != null" >
        reply_report_num = #{replyReportNum,jdbcType=INTEGER},
      </if>
    </set>
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zssq.news.dao.pojo.NewsReply" >
    update news_reply
    set reply_code = #{replyCode,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      news_code = #{newsCode,jdbcType=VARCHAR},
      comment_code = #{commentCode,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_level = #{orgLevel,jdbcType=TINYINT},
      to_reply_user_code = #{toReplyUserCode,jdbcType=VARCHAR},
      to_reply_org_code = #{toReplyOrgCode,jdbcType=VARCHAR},
      to_reply_org_level = #{toReplyOrgLevel,jdbcType=TINYINT},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      reply_is_delete = #{replyIsDelete,jdbcType=TINYINT},
      reply_is_shield = #{replyIsShield,jdbcType=TINYINT},
      reply_like_num = #{replyLikeNum,jdbcType=INTEGER},
      reply_report_num = #{replyReportNum,jdbcType=INTEGER}
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>

  <update id="modifyNewsReplyShield" parameterType="com.zssq.news.model.NewsReplyModel">
    update news_reply
    <set>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="isShield != null">
        reply_is_shield = #{isShield,jdbcType=TINYINT},
      </if>
    </set>
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>

</mapper>