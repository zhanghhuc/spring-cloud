<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zssq.dao.mapper.NewsCollectMapper" >
  <resultMap id="BaseResultMap" type="com.zssq.news.dao.pojo.NewsCollect" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="info_collect_code" property="infoCollectCode" jdbcType="VARCHAR" />
    <result column="news_code" property="newsCode" jdbcType="VARCHAR" />
    <result column="collect_people_code" property="collectPeopleCode" jdbcType="VARCHAR" />
    <result column="org_level" property="orgLevel" jdbcType="TINYINT" />
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="tenant_code" property="tenantCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, info_collect_code, news_code, collect_people_code, org_level, org_code, create_time, 
    modify_time, remark, tenant_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from news_collect
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCollectUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from news_collect
    where collect_people_code = #{0} AND  news_code=#{1}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from news_collect
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteNewsCollect" parameterType="com.zssq.news.model.NewsCollectModel" >
    delete from news_collect
    where news_code = #{newsCode} AND collect_people_code=#{userCode}
  </delete>
  <insert id="insert" parameterType="com.zssq.news.dao.pojo.NewsCollect" >
    insert into news_collect (id, info_collect_code, news_code, 
      collect_people_code, org_level, org_code, 
      create_time, modify_time, remark, 
      tenant_code)
    values (#{id,jdbcType=BIGINT}, #{infoCollectCode,jdbcType=VARCHAR}, #{newsCode,jdbcType=VARCHAR}, 
      #{collectPeopleCode,jdbcType=VARCHAR}, #{orgLevel,jdbcType=TINYINT}, #{orgCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{tenantCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zssq.news.dao.pojo.NewsCollect" >
    insert into news_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="infoCollectCode != null" >
        info_collect_code,
      </if>
      <if test="newsCode != null" >
        news_code,
      </if>
      <if test="collectPeopleCode != null" >
        collect_people_code,
      </if>
      <if test="orgLevel != null" >
        org_level,
      </if>
      <if test="orgCode != null" >
        org_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="tenantCode != null" >
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="infoCollectCode != null" >
        #{infoCollectCode,jdbcType=VARCHAR},
      </if>
      <if test="newsCode != null" >
        #{newsCode,jdbcType=VARCHAR},
      </if>
      <if test="collectPeopleCode != null" >
        #{collectPeopleCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null" >
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zssq.news.dao.pojo.NewsCollect" >
    update news_collect
    <set >
      <if test="infoCollectCode != null" >
        info_collect_code = #{infoCollectCode,jdbcType=VARCHAR},
      </if>
      <if test="newsCode != null" >
        news_code = #{newsCode,jdbcType=VARCHAR},
      </if>
      <if test="collectPeopleCode != null" >
        collect_people_code = #{collectPeopleCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        org_level = #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="orgCode != null" >
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null" >
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zssq.news.dao.pojo.NewsCollect" >
    update news_collect
    set info_collect_code = #{infoCollectCode,jdbcType=VARCHAR},
      news_code = #{newsCode,jdbcType=VARCHAR},
      collect_people_code = #{collectPeopleCode,jdbcType=VARCHAR},
      org_level = #{orgLevel,jdbcType=TINYINT},
      org_code = #{orgCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>