<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zssq.dao.mapper.ActivityPrizeMapper" >
  <resultMap id="BaseResultMap" type="com.zssq.dao.pojo.ActivityPrize" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="is_disable" property="isDisable" jdbcType="TINYINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="tenant_code" property="tenantCode" jdbcType="VARCHAR" />
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="org_level" property="orgLevel" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="activity_code" property="activityCode" jdbcType="VARCHAR" />
    <result column="is_join_prize" property="isJoinPrize" jdbcType="TINYINT" />
    <result column="sequence_no" property="sequenceNo" jdbcType="INTEGER" />
    <result column="prize_name" property="prizeName" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="is_reward_gold" property="isRewardGold" jdbcType="TINYINT" />
    <result column="reward_gold_num" property="rewardGoldNum" jdbcType="INTEGER" />
    <result column="is_award_honor" property="isAwardHonor" jdbcType="TINYINT" />
    <result column="award_honor_code" property="awardHonorCode" jdbcType="VARCHAR" />
    <result column="award_honor_name" property="awardHonorName" jdbcType="VARCHAR" />
    <result column="award_honor_url" property="awardHonorUrl" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zssq.dao.pojo.ActivityPrize" extends="BaseResultMap" >
    <result column="rule" property="rule" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, is_disable, is_delete, tenant_code, org_code, org_level, create_time, modify_time, 
    remark, activity_code, is_join_prize, sequence_no, prize_name, introduce, is_reward_gold, 
    reward_gold_num, is_award_honor, award_honor_code, award_honor_name, award_honor_url
  </sql>
  <sql id="Blob_Column_List" >
    rule
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zssq.dao.pojo.ActivityPrizeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_prize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zssq.dao.pojo.ActivityPrizeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from activity_prize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_prize
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from activity_prize
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zssq.dao.pojo.ActivityPrizeExample" >
    delete from activity_prize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zssq.dao.pojo.ActivityPrize" >
    insert into activity_prize (id, code, is_disable, 
      is_delete, tenant_code, org_code, 
      org_level, create_time, modify_time, 
      remark, activity_code, is_join_prize, 
      sequence_no, prize_name, introduce, 
      is_reward_gold, reward_gold_num, is_award_honor, 
      award_honor_code, award_honor_name, award_honor_url, 
      rule)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{isDisable,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=TINYINT}, #{tenantCode,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, 
      #{orgLevel,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{activityCode,jdbcType=VARCHAR}, #{isJoinPrize,jdbcType=TINYINT}, 
      #{sequenceNo,jdbcType=INTEGER}, #{prizeName,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{isRewardGold,jdbcType=TINYINT}, #{rewardGoldNum,jdbcType=INTEGER}, #{isAwardHonor,jdbcType=TINYINT}, 
      #{awardHonorCode,jdbcType=VARCHAR}, #{awardHonorName,jdbcType=VARCHAR}, #{awardHonorUrl,jdbcType=VARCHAR}, 
      #{rule,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zssq.dao.pojo.ActivityPrize" >
    insert into activity_prize
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="isDisable != null" >
        is_disable,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="tenantCode != null" >
        tenant_code,
      </if>
      <if test="orgCode != null" >
        org_code,
      </if>
      <if test="orgLevel != null" >
        org_level,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="activityCode != null" >
        activity_code,
      </if>
      <if test="isJoinPrize != null" >
        is_join_prize,
      </if>
      <if test="sequenceNo != null" >
        sequence_no,
      </if>
      <if test="prizeName != null" >
        prize_name,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="isRewardGold != null" >
        is_reward_gold,
      </if>
      <if test="rewardGoldNum != null" >
        reward_gold_num,
      </if>
      <if test="isAwardHonor != null" >
        is_award_honor,
      </if>
      <if test="awardHonorCode != null" >
        award_honor_code,
      </if>
      <if test="awardHonorName != null" >
        award_honor_name,
      </if>
      <if test="awardHonorUrl != null" >
        award_honor_url,
      </if>
      <if test="rule != null" >
        rule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null" >
        #{isDisable,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="tenantCode != null" >
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="activityCode != null" >
        #{activityCode,jdbcType=VARCHAR},
      </if>
      <if test="isJoinPrize != null" >
        #{isJoinPrize,jdbcType=TINYINT},
      </if>
      <if test="sequenceNo != null" >
        #{sequenceNo,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null" >
        #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="isRewardGold != null" >
        #{isRewardGold,jdbcType=TINYINT},
      </if>
      <if test="rewardGoldNum != null" >
        #{rewardGoldNum,jdbcType=INTEGER},
      </if>
      <if test="isAwardHonor != null" >
        #{isAwardHonor,jdbcType=TINYINT},
      </if>
      <if test="awardHonorCode != null" >
        #{awardHonorCode,jdbcType=VARCHAR},
      </if>
      <if test="awardHonorName != null" >
        #{awardHonorName,jdbcType=VARCHAR},
      </if>
      <if test="awardHonorUrl != null" >
        #{awardHonorUrl,jdbcType=VARCHAR},
      </if>
      <if test="rule != null" >
        #{rule,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zssq.dao.pojo.ActivityPrizeExample" resultType="java.lang.Integer" >
    select count(*) from activity_prize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_prize
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisable != null" >
        is_disable = #{record.isDisable,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.tenantCode != null" >
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null" >
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgLevel != null" >
        org_level = #{record.orgLevel,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.activityCode != null" >
        activity_code = #{record.activityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isJoinPrize != null" >
        is_join_prize = #{record.isJoinPrize,jdbcType=TINYINT},
      </if>
      <if test="record.sequenceNo != null" >
        sequence_no = #{record.sequenceNo,jdbcType=INTEGER},
      </if>
      <if test="record.prizeName != null" >
        prize_name = #{record.prizeName,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isRewardGold != null" >
        is_reward_gold = #{record.isRewardGold,jdbcType=TINYINT},
      </if>
      <if test="record.rewardGoldNum != null" >
        reward_gold_num = #{record.rewardGoldNum,jdbcType=INTEGER},
      </if>
      <if test="record.isAwardHonor != null" >
        is_award_honor = #{record.isAwardHonor,jdbcType=TINYINT},
      </if>
      <if test="record.awardHonorCode != null" >
        award_honor_code = #{record.awardHonorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.awardHonorName != null" >
        award_honor_name = #{record.awardHonorName,jdbcType=VARCHAR},
      </if>
      <if test="record.awardHonorUrl != null" >
        award_honor_url = #{record.awardHonorUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.rule != null" >
        rule = #{record.rule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update activity_prize
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      is_disable = #{record.isDisable,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_level = #{record.orgLevel,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      activity_code = #{record.activityCode,jdbcType=VARCHAR},
      is_join_prize = #{record.isJoinPrize,jdbcType=TINYINT},
      sequence_no = #{record.sequenceNo,jdbcType=INTEGER},
      prize_name = #{record.prizeName,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      is_reward_gold = #{record.isRewardGold,jdbcType=TINYINT},
      reward_gold_num = #{record.rewardGoldNum,jdbcType=INTEGER},
      is_award_honor = #{record.isAwardHonor,jdbcType=TINYINT},
      award_honor_code = #{record.awardHonorCode,jdbcType=VARCHAR},
      award_honor_name = #{record.awardHonorName,jdbcType=VARCHAR},
      award_honor_url = #{record.awardHonorUrl,jdbcType=VARCHAR},
      rule = #{record.rule,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_prize
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      is_disable = #{record.isDisable,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_level = #{record.orgLevel,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      activity_code = #{record.activityCode,jdbcType=VARCHAR},
      is_join_prize = #{record.isJoinPrize,jdbcType=TINYINT},
      sequence_no = #{record.sequenceNo,jdbcType=INTEGER},
      prize_name = #{record.prizeName,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      is_reward_gold = #{record.isRewardGold,jdbcType=TINYINT},
      reward_gold_num = #{record.rewardGoldNum,jdbcType=INTEGER},
      is_award_honor = #{record.isAwardHonor,jdbcType=TINYINT},
      award_honor_code = #{record.awardHonorCode,jdbcType=VARCHAR},
      award_honor_name = #{record.awardHonorName,jdbcType=VARCHAR},
      award_honor_url = #{record.awardHonorUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zssq.dao.pojo.ActivityPrize" >
    update activity_prize
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null" >
        is_disable = #{isDisable,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="tenantCode != null" >
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLevel != null" >
        org_level = #{orgLevel,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="activityCode != null" >
        activity_code = #{activityCode,jdbcType=VARCHAR},
      </if>
      <if test="isJoinPrize != null" >
        is_join_prize = #{isJoinPrize,jdbcType=TINYINT},
      </if>
      <if test="sequenceNo != null" >
        sequence_no = #{sequenceNo,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null" >
        prize_name = #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="isRewardGold != null" >
        is_reward_gold = #{isRewardGold,jdbcType=TINYINT},
      </if>
      <if test="rewardGoldNum != null" >
        reward_gold_num = #{rewardGoldNum,jdbcType=INTEGER},
      </if>
      <if test="isAwardHonor != null" >
        is_award_honor = #{isAwardHonor,jdbcType=TINYINT},
      </if>
      <if test="awardHonorCode != null" >
        award_honor_code = #{awardHonorCode,jdbcType=VARCHAR},
      </if>
      <if test="awardHonorName != null" >
        award_honor_name = #{awardHonorName,jdbcType=VARCHAR},
      </if>
      <if test="awardHonorUrl != null" >
        award_honor_url = #{awardHonorUrl,jdbcType=VARCHAR},
      </if>
      <if test="rule != null" >
        rule = #{rule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zssq.dao.pojo.ActivityPrize" >
    update activity_prize
    set code = #{code,jdbcType=VARCHAR},
      is_disable = #{isDisable,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_level = #{orgLevel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      activity_code = #{activityCode,jdbcType=VARCHAR},
      is_join_prize = #{isJoinPrize,jdbcType=TINYINT},
      sequence_no = #{sequenceNo,jdbcType=INTEGER},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      is_reward_gold = #{isRewardGold,jdbcType=TINYINT},
      reward_gold_num = #{rewardGoldNum,jdbcType=INTEGER},
      is_award_honor = #{isAwardHonor,jdbcType=TINYINT},
      award_honor_code = #{awardHonorCode,jdbcType=VARCHAR},
      award_honor_name = #{awardHonorName,jdbcType=VARCHAR},
      award_honor_url = #{awardHonorUrl,jdbcType=VARCHAR},
      rule = #{rule,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zssq.dao.pojo.ActivityPrize" >
    update activity_prize
    set code = #{code,jdbcType=VARCHAR},
      is_disable = #{isDisable,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_level = #{orgLevel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      activity_code = #{activityCode,jdbcType=VARCHAR},
      is_join_prize = #{isJoinPrize,jdbcType=TINYINT},
      sequence_no = #{sequenceNo,jdbcType=INTEGER},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      is_reward_gold = #{isRewardGold,jdbcType=TINYINT},
      reward_gold_num = #{rewardGoldNum,jdbcType=INTEGER},
      is_award_honor = #{isAwardHonor,jdbcType=TINYINT},
      award_honor_code = #{awardHonorCode,jdbcType=VARCHAR},
      award_honor_name = #{awardHonorName,jdbcType=VARCHAR},
      award_honor_url = #{awardHonorUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <!-- 批量添加活动奖项 -->
  <insert id="batchInsertPrize" parameterType="java.util.List">
  	 insert into activity_prize ( code,tenant_code, org_code, 
	      create_time, modify_time, activity_code, is_join_prize, 
	      sequence_no, prize_name, introduce, 
	      is_reward_gold, reward_gold_num, is_award_honor, 
	      award_honor_code, award_honor_name, award_honor_url, 
	      rule)
    values
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.code},#{item.tenantCode},#{item.orgCode},
        #{item.createTime},#{item.modifyTime},#{item.activityCode},
        #{item.isJoinPrize},#{item.sequenceNo},#{item.prizeName},
        #{item.introduce},#{item.isRewardGold},#{item.rewardGoldNum},
        #{item.isAwardHonor},#{item.awardHonorCode},#{item.awardHonorName},
        #{item.awardHonorUrl},#{item.rule})  
    </foreach>  
  </insert>
 
</mapper>