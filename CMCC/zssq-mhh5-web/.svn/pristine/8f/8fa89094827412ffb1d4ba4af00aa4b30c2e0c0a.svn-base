package com.zssq.msg.controller;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.zssq.annotation.RequireValid;
import com.zssq.dao.pojo.SysUserInfo;
import com.zssq.dao.pojo.UserMsgPraise;
import com.zssq.exceptions.BusinessException;
import com.zssq.msg.vo.PraiseListVO;
import com.zssq.pojo.Message;
import com.zssq.pojo.ResultJSON;
import com.zssq.service.ISysUserService;
import com.zssq.service.MessagePraiseService;
import com.zssq.utils.PageBean;
import com.zssq.utils.PageParam;
import com.zssq.utils.PropertiesUtil;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * 
 * @ClassName: MsgPariseController  
 * @Description: 点赞Controller
 * @author YDB  
 * @date 2017年4月1日  
 *
 */
@Controller
@RequestMapping("/msg")
public class MsgPariseController {
	
	private Logger log = LoggerFactory.getLogger(this.getClass());	

	@Autowired
	private MessagePraiseService messagePraiseService;
	
	@Autowired
	private ISysUserService userService;
	
	/**
	 * 
	 * @Title: getPraiseList  
	 * @Description: 消息点赞查询
	 * @param pv
	 * @return    参数  
	 * @return: ResultJSON    返回类型
	 * @throws BusinessException 
	 */
	@RequestMapping("/getPraiseList")
	@ResponseBody
	public ResultJSON getPraiseList(@RequireValid PraiseListVO pv) throws BusinessException{
		ResultJSON resJson=new ResultJSON();
		UserMsgPraise userMsgPraise=new UserMsgPraise();
		Message m = null;
		JSONObject json=new JSONObject();
		JSONArray jsonArray=new JSONArray();
		try {
			//查询条件
			PageParam pageParam=new PageParam(Integer.parseInt(pv.getPageNo()), Integer.parseInt(pv.getPageSize()));
			userMsgPraise.setUserCode(pv.getUserCode());
			PageBean pageBean=messagePraiseService.getPraiseList(userMsgPraise, pageParam);
			//返回值封装
			List<UserMsgPraise> list=pageBean.getRecordList();
			List<String> userCodeList=new ArrayList<>();
			for (int i = 0; i < list.size(); i++) {
				userCodeList.add(list.get(i).getUserCode());
			}
			
			//List<SysUserInfo> userInfoList=userService.selectByCodes(userCodeList);
			
			Map<String, Object> userMap= userService.selectMapByCodes(userCodeList);
			
			for(int i=0;i<list.size();i++){
				UserMsgPraise temp=list.get(i);
				//点赞人的userCode
				json.put("userCode",temp.getPraiseCode());
				json.put("content",temp.getContent());
				json.put("createTime",temp.getCreateTime());
				json.put("praiseType",temp.getPraiseType());
				json.put("originalCode", temp.getOriginalCode());
				
			/*	for (SysUserInfo userInfo:userInfoList) {
					if(list.get(i).getPraiseUserCode().equals(userInfo.getUserCode())){
						json.put("userName",userInfo.getUserName());
						json.put("imgUrl", userInfo.getHeadPortrait());
						json.put("orgName",userInfo.getManageOrgInfo().getSysOrgName());
						continue;
					}
				}*/
				
				SysUserInfo userInfo=(SysUserInfo) userMap.get(list.get(i).getPraiseUserCode());
				if(userInfo!=null){
					json.put("userName",userInfo.getUserName());
					json.put("imgUrl", userInfo.getHeadPortrait());
					json.put("orgName",userInfo.getManageOrgInfo().getSysOrgName());
				}else{
					json.put("userName","");
					json.put("imgUrl", "");
					json.put("orgName","");
				}
				
				jsonArray.add(json);
				json=new JSONObject();
			}

			m = PropertiesUtil.getMessage("COMMON_200");
			
			json.put("total", pageBean.getTotalCount());
			json.put("praiseList", jsonArray);
			resJson.setReturnCode(m.getCode());
			resJson.setReturnTip(m.getTip());
			resJson.setBody(JSONObject.toJSON(json));
        	
		} catch (BusinessException e) {
			throw e;
		} catch (Exception e) {
			log.error("点赞查询-getPraiseList:"+JSONObject.toJSONString(pv),e);
			throw new BusinessException().build("MSG_26001", "获取列表");
		}
		
		return resJson;
	}
	
	
	
	

}
