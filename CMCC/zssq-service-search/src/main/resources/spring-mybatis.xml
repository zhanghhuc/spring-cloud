<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    
    <!--&lt;!&ndash; 自动扫描 &ndash;&gt;  -->
    <!--<context:component-scan base-package="com.zssq" />  -->
    <!--&lt;!&ndash; 引入配置文件 &ndash;&gt;  -->
    <!--<bean id="propertyConfigurer"  -->
        <!--class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  -->
        <!--<property name="location" value="classpath:jdbc.properties" />  -->
    <!--</bean>  -->
  
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        初始化连接大小  
        <property name="initialSize" value="${initialSize}"></property>  
        连接池最大数量  
        <property name="maxActive" value="${maxActive}"></property>  
        连接池最大空闲
        <property name="maxIdle" value="${maxIdle}"></property>  
          连接池最小空闲  
        <property name="minIdle" value="${minIdle}"></property>  
        获取连接最大等待时间  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>   -->
    
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
    <!---->
        <!--<property name="driverClassName" value="${driver}" />-->
        <!--<property name="url" value="${url}" />-->
        <!--<property name="username" value="${username}" />-->
        <!--<property name="password" value="${password}" />-->

        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="10" />-->
        <!--&lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;-->
        <!--<property name="maxActive" value="300" />-->
        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
        <!--<property name="minIdle" value="30" />-->
        <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->

        <!--<property name="validationQuery" value="${validationQuery}"></property> -->
        <!--<property name="testOnBorrow" value="false" />-->
        <!--<property name="testOnReturn" value="false" />-->
        <!--<property name="testWhileIdle" value="true" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="3600000" />-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->

        <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="true" />-->
        <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="1800" />-->
        <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
        <!--<property name="logAbandoned" value="true" />-->

        <!--&lt;!&ndash; 监控数据库 &ndash;&gt;-->
        <!--&lt;!&ndash; <property name="filters" value="stat" /> &ndash;&gt;-->
        <!--<property name="filters" value="mergeStat" />-->
    <!--</bean>-->



    <!--&lt;!&ndash; spring和MyBatis完美整合，不需要mybatis的配置映射文件 &ndash;&gt;  -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  -->
        <!--<property name="dataSource" ref="dataSource" />  -->
        <!--&lt;!&ndash; 自动扫描mapping.xml文件 &ndash;&gt;  -->
        <!--<property name="mapperLocations" value="classpath:com/zssq/dao/mapping/*.xml"></property>  -->
    <!--</bean>  -->
  <!---->
    <!--&lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类 &ndash;&gt;  -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  -->
        <!--<property name="basePackage" value="com.zssq.dao.mapper" />  -->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  -->
    <!--</bean>  -->
  <!---->
    <!--&lt;!&ndash; (事务管理)transaction manager, use JtaTransactionManager for global tx &ndash;&gt;  -->
    <!--<bean id="transactionManager"  -->
        <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  -->
        <!--<property name="dataSource" ref="dataSource" />  -->
    <!--</bean>  -->
    <!---->
    <!--&lt;!&ndash;  配置事务传播特性 &ndash;&gt;-->
	<!--<tx:advice id="TestAdvice" transaction-manager="transactionManager">-->
	    <!--<tx:attributes>-->
	      <!--<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
	      <!--<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
	      <!--<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
	      <!--<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
	      <!--<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
	      <!--<tx:method name="select*" propagation="REQUIRED"  read-only="true"/>-->
	      <!--<tx:method name="find*" propagation="REQUIRED" read-only="true"/>-->
	      <!--<tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
	      <!--<tx:method name="apply*" propagation="REQUIRED" read-only="true"/>-->
	      <!--<tx:method name="query*" propagation="REQUIRED" read-only="true"/>-->
	      <!--<tx:method name="load*" propagation="REQUIRED" read-only="true"/>-->
	    <!--</tx:attributes>-->
	<!--</tx:advice>-->
	<!---->
	<!--&lt;!&ndash;  配置参与事务的类 &ndash;&gt;-->
	<!--<aop:config>-->
		<!--<aop:pointcut id="allTestServiceMethod" expression="execution(* com.zssq.service..*.*(..))"/>-->
		<!--<aop:advisor pointcut-ref="allTestServiceMethod" advice-ref="TestAdvice" />-->
	<!--</aop:config>-->

	
    
  
</beans>  