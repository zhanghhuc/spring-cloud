package com.zssq.login.controller;

import java.util.Properties;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zssq.utils.PropertiesUtil;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.zssq.annotation.RequireValid;
import com.zssq.exceptions.BusinessException;
import com.zssq.pojo.Login;
import com.zssq.pojo.LoginInfo;
import com.zssq.pojo.Logout;
import com.zssq.pojo.Message;
import com.zssq.pojo.ResultJSON;
import com.zssq.pojo.Ticket;

import redis.clients.jedis.Jedis;


@Controller  
@RequestMapping("/common")
public class LoginController {
	
	private Logger log = Logger.getLogger(this.getClass());
	
	private Properties propsRedis = new PropertiesUtil("ssoRedis.properties");
	
	@RequestMapping("/logout")  
	@ResponseBody
    public ResultJSON logout(HttpServletRequest request,HttpServletResponse response,@RequireValid Logout param) throws BusinessException{
		Message m = null;
		ResultJSON rj = new ResultJSON();
		try {
			String isExistData = param.getToken();
			log.info("logout>>>>>>>"+propsRedis.getProperty("webRedisIP")+"==="+propsRedis.getProperty("webRedisPort"));
			Jedis redis = new Jedis(propsRedis.getProperty("webRedisIP"), Integer.valueOf(propsRedis.getProperty("webRedisPort")));  //本地redis
			redis.auth(propsRedis.getProperty("webRedisPwd"));
			System.out.println("Server is running: " + redis.ping()); 
	    	redis.del(isExistData);
			log.info("logout>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+isExistData);
	    	m = PropertiesUtil.getMessage("COMMON_200");
	    	
	    	rj.setReturnCode(m.getCode());
            rj.setReturnTip(m.getTip());
            rj.setBody(new JSONObject());
            
            log.info("common.logout:注销成功，" + isExistData);
			
		} catch (Exception e) {
			log.info(e);
			throw BusinessException.build("SSO_0001", "注销");
		}
		
		return rj;
	}	
	
	@RequestMapping("/login")  
	@ResponseBody
    public ResultJSON login(HttpServletRequest request,HttpServletResponse response,@RequireValid Login param) throws BusinessException{
		Message m = null;
		ResultJSON rj = new ResultJSON();
		try {
			Object ssoObj = request.getAttribute("ticketMsg");
			if(ssoObj != null){
				ResultJSON resultJSON = JSONObject.parseObject(String.valueOf(ssoObj),ResultJSON.class);
				if(resultJSON.getReturnCode().equals("200")){ //有票据，认证成功
					Ticket t = JSONObject.parseObject(String.valueOf(resultJSON.getBody()),Ticket.class);
					rj.setReturnCode(resultJSON.getReturnCode());
					rj.setReturnTip(resultJSON.getReturnTip());
					LoginInfo login = new LoginInfo();
					login.setUserCode(param.getUserCode());
//					login.setUidPassword(param.getUidPassword());
					login.setApp(param.getApp());
					login.setToken(t.getToken());
					
					rj.setBody(login);
					
					log.info("common.login:登录成功，" + param.getUserCode() + "-" + param.getApp());
				}
			}
			
		} catch (Exception e) {
			throw BusinessException.build("SSO_0001", "登录");
		}
		
		return rj;
	}	
}
