<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zssq.disk.dao.DiskFileMapper">
    <resultMap id="BaseResultMap" type="com.zssq.disk.po.DiskFile">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="file_code" property="fileCode" jdbcType="VARCHAR"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="file_size" property="fileSize" jdbcType="VARCHAR"/>
        <result column="file_type" property="fileType" jdbcType="INTEGER"/>
        <result column="file_url" property="fileUrl" jdbcType="VARCHAR"/>
        <result column="file_suffix" property="fileSuffix" jdbcType="VARCHAR"/>
        <result column="parent_code" property="parentCode" jdbcType="VARCHAR"/>
        <result column="creat_time" property="creatTime" jdbcType="BIGINT"/>
        <result column="edit_time" property="editTime" jdbcType="BIGINT"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="user_code" property="userCode" jdbcType="VARCHAR"/>
        <result column="edit_user_code" property="editUserCode" jdbcType="VARCHAR"/>
        <result column="report_type" property="reportType" jdbcType="INTEGER"/>
        <result column="org_code" property="orgCode" jdbcType="VARCHAR"/>
        <result column="tenant_code" property="tenantCode" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, file_code, file_name, file_size, file_type, file_url, file_suffix, parent_code, 
    creat_time, edit_time, is_delete, user_code, edit_user_code, report_type, org_code, 
    tenant_code
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zssq.disk.po.DiskFileExample">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from disk_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from disk_file
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from disk_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.zssq.disk.po.DiskFile">
    insert into disk_file (id, file_code, file_name, 
      file_size, file_type, file_url, 
      file_suffix, parent_code, creat_time, 
      edit_time, is_delete, user_code, 
      edit_user_code, report_type, org_code, 
      tenant_code)
    values (#{id,jdbcType=BIGINT}, #{fileCode,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, #{fileUrl,jdbcType=VARCHAR}, 
      #{fileSuffix,jdbcType=VARCHAR}, #{parentCode,jdbcType=VARCHAR}, #{creatTime,jdbcType=BIGINT}, 
      #{editTime,jdbcType=BIGINT}, #{isDelete,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, 
      #{editUserCode,jdbcType=VARCHAR}, #{reportType,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR}, 
      #{tenantCode,jdbcType=VARCHAR})
  </insert>


    <insert id="insertBatch" parameterType="java.util.List">
        insert into disk_file (id, file_code, file_name,
        file_size, file_type, file_url,
        file_suffix, parent_code, creat_time,
        edit_time, is_delete, user_code,
        edit_user_code, report_type, org_code,
        tenant_code)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=BIGINT}, #{item.fileCode,jdbcType=VARCHAR}, #{item.fileName,jdbcType=VARCHAR},
            #{item.fileSize,jdbcType=VARCHAR}, #{item.fileType,jdbcType=INTEGER}, #{item.fileUrl,jdbcType=VARCHAR},
            #{item.fileSuffix,jdbcType=VARCHAR}, #{item.parentCode,jdbcType=VARCHAR}, #{item.creatTime,jdbcType=BIGINT},
            #{item.editTime,jdbcType=BIGINT}, #{item.isDelete,jdbcType=INTEGER}, #{item.userCode,jdbcType=VARCHAR},
            #{item.editUserCode,jdbcType=VARCHAR}, #{item.reportType,jdbcType=INTEGER}, #{item.orgCode,jdbcType=VARCHAR},
            #{item.tenantCode,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>


    <insert id="insertSelective" parameterType="com.zssq.disk.po.DiskFile">
        insert into disk_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="fileCode != null">
                file_code,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileSuffix != null">
                file_suffix,
            </if>
            <if test="parentCode != null">
                parent_code,
            </if>
            <if test="creatTime != null">
                creat_time,
            </if>
            <if test="editTime != null">
                edit_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="editUserCode != null">
                edit_user_code,
            </if>
            <if test="reportType != null">
                report_type,
            </if>
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="tenantCode != null">
                tenant_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="fileCode != null">
                #{fileCode,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=INTEGER},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileSuffix != null">
                #{fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null">
                #{parentCode,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                #{creatTime,jdbcType=BIGINT},
            </if>
            <if test="editTime != null">
                #{editTime,jdbcType=BIGINT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="editUserCode != null">
                #{editUserCode,jdbcType=VARCHAR},
            </if>
            <if test="reportType != null">
                #{reportType,jdbcType=INTEGER},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="tenantCode != null">
                #{tenantCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zssq.disk.po.DiskFileExample" resultType="java.lang.Integer">
        select count(*) from disk_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.zssq.disk.po.DiskFile">
        update disk_file
        <set>
            <if test="fileCode != null">
                file_code = #{fileCode,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=INTEGER},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileSuffix != null">
                file_suffix = #{fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null">
                parent_code = #{parentCode,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                creat_time = #{creatTime,jdbcType=BIGINT},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=BIGINT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="editUserCode != null">
                edit_user_code = #{editUserCode,jdbcType=VARCHAR},
            </if>
            <if test="reportType != null">
                report_type = #{reportType,jdbcType=INTEGER},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="tenantCode != null">
                tenant_code = #{tenantCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zssq.disk.po.DiskFile">
    update disk_file
    set file_code = #{fileCode,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=INTEGER},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      parent_code = #{parentCode,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=BIGINT},
      edit_time = #{editTime,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=INTEGER},
      user_code = #{userCode,jdbcType=VARCHAR},
      edit_user_code = #{editUserCode,jdbcType=VARCHAR},
      report_type = #{reportType,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>