<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zssq.blog.dao.mapper.BlogClassMapper">
	
	<!-- 创建临时表 -->
	<update id="createTempTable">
		CREATE TABLE blog_class_temp (
			old_id  INTEGER NOT NULL,
			subject_code  varchar(32) NOT NULL,
			class_code  varchar(32) NOT NULL,
			INDEX old_id (old_id) USING BTREE ,
			INDEX subject_code (subject_code) USING BTREE 
		)
		ENGINE=InnoDB
		DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci
		ROW_FORMAT=COMPACT
	</update>
	
	<!-- 删除临时表 -->
	<update id="dropTempTable">
		DROP TABLE IF EXISTS blog_class_temp
	</update>
	
	<!-- 查询原表中分类数据 -->
	<select id="getSourceClassList" resultType="com.zssq.blog.pojo.SourceClassModel">
		SELECT
			tbc1.cata_id AS cataId,
			CONCAT(
				tbc2.cata_name,
				' - ',
				tbc1.cata_name
			) AS cataName,
			tbc1.create_time AS createTime
		FROM source_blog_catalog tbc1
		LEFT JOIN source_blog_catalog tbc2 
			ON tbc1.PARENTS_ID = tbc2.CATA_ID
		WHERE tbc1.del_flag = 0
		AND tbc1.parents_id != 0
	</select>
	
	<!-- 查询分类表中是否已经有数据 -->
	<select id="getBlogClassCount" resultType="int">
		SELECT
			COUNT(1)
		FROM blog_class
	</select>
	
	<!-- 插入人员分类数据 -->
	<update id="insertUserClass" parameterType="map" statementType="CALLABLE">
		{CALL insert_user_class_pro(#{remark,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
			#{createTime,jdbcType=BIGINT}, #{oldId,jdbcType=INTEGER}, #{insertTempData,jdbcType=TINYINT})}
	</update>	
	
	<!-- 插入班组分类数据 -->
	<update id="insertTeamClass" parameterType="map" statementType="CALLABLE">
		{CALL insert_team_class_pro(#{remark,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
			#{createTime,jdbcType=BIGINT}, #{oldId,jdbcType=INTEGER}, #{insertTempData,jdbcType=TINYINT})}
	</update>	
	
</mapper>