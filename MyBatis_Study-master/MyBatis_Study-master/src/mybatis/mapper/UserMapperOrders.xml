<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 


<mapper namespace="mybatis.mapper.UserMapperOrders">

	<resultMap type="mybatis.po.Orders" id="OrdersUserResultMap">
		<!-- 配置映射订单信息 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<!-- 配置映射的关联的用户信息 -->
		<!-- association用于映射关联查询单个对象的信息
			property：要将关联查询的用户信息映射到Orders中的哪个属性
			javaType：该属性的类型
		 -->
		<association property="user" javaType="mybatis.po.User">
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<resultMap type="mybatis.po.Orders" id="OrdersAndOrderDetailResultMap" extends="OrdersUserResultMap">
		<!-- 配置映射订单信息和关联的用户信息和上面的一样，继承上面的即可 -->
		<!-- 配置关联的订单明细信息 -->
		<collection property="orderdetails" ofType="mybatis.po.Orderdetail">
			<id column="orderdetail_id" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
			<result column="orders_id" property="ordersId"/>
		</collection>
	</resultMap>
	
	<resultMap type="mybatis.po.User" id="UserAndItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
		<!-- 订单信息 -->
		<!-- 一个用户对应多个订单，使用collection -->
		<collection property="ordersList" ofType="mybatis.po.Orders">
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 订单明细信息 -->
			<!-- 一个订单包括多个明细，使用collection -->
			<collection property="orderdetails" ofType="mybatis.po.Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<result column="orders_id" property="ordersId"/>
				<!-- 商品信息 -->
				<!-- 一个明细对应一个商品信息，使用association -->
				<association property="items" javaType="mybatis.po.Items">
					<id column="items_id" property="id"/>
		  	 		<result column="items_name" property="name"/>
		  	 		<result column="items_detail" property="detail"/>
		  	 		<result column="items_price" property="price"/>
				</association>
			</collection>
		</collection>
	</resultMap>
	
	<!-- 延迟加载的resultMap -->
	<resultMap type="mybatis.po.Orders" id="OrdersUserLazyLoadingResultMap">
		<!--对订单信息进行映射配置  -->
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			
			<!-- 实现对用户信息进行延迟加载
			select：指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statement）
			column：订单信息中关联用户信息查询的列，是user_id -->
			
			<association property="user"  javaType="mybatis.po.User"
			 select="mybatis.mapper.UserMapper.findUserById" column="user_id">
			
			</association>
		
	</resultMap>

	<select id="findOrdersUser" resultType="mybatis.po.OrdersCustom">
		SELECT 
		  orders.*,
		  user.`username`,
		  user.`sex`,
		  user.`address` 
		FROM
		  orders,
		  USER 
		WHERE orders.`user_id` = user.`id` 
	</select>
	
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		SELECT 
		  orders.*,
		  user.`username`,
		  user.`sex`,
		  user.`address` 
		FROM
		  orders,
		  USER 
		WHERE orders.`user_id` = user.`id` 
	</select>
	
	<select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
		SELECT 
		  orders.*,
		  user.`username`,
		  user.`sex`,
		  user.`address`,
		  orderdetail.`id` orderdetail_id,
		  orderdetail.`items_id`,
		  orderdetail.`items_num`,
		  orderdetail.`orders_id`
		FROM
		  orders,
		  USER,
		  orderdetail 
		WHERE orders.`user_id`=user.`id` AND orders.`id` = orderdetail.`orders_id` 
	</select>
	
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
		SELECT 
		  orders.*,
		  user.`username`,
		  user.`sex`,
		  user.`address`,
		  orderdetail.`id` orderdetail_id,
		  orderdetail.`items_id`,
		  orderdetail.`items_num`,
		  orderdetail.`orders_id`,
		  items.`name` items_name,
		  items.`detail` items_detail,
		  items.`price` items_price
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items
		WHERE orders.`user_id`=user.`id` AND orders.`id` = orderdetail.`orders_id` AND orderdetail.`items_id`=items.`id`
	</select>
	
	<select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
		SELECT * FROM orders
	</select>
</mapper>